//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FoodorderApp.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FoodOrderDBEntities : DbContext
    {
        public FoodOrderDBEntities()
            : base("name=FoodOrderDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblFood> tblFoods { get; set; }
        public virtual DbSet<tblFoodCategory> tblFoodCategories { get; set; }
        public virtual DbSet<tblFoodSubCat> tblFoodSubCats { get; set; }
        public virtual DbSet<tblOrder> tblOrders { get; set; }
    
        public virtual int AddEditCategory(Nullable<int> catid, string catname, string cdesc, string catimg)
        {
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            var catnameParameter = catname != null ?
                new ObjectParameter("catname", catname) :
                new ObjectParameter("catname", typeof(string));
    
            var cdescParameter = cdesc != null ?
                new ObjectParameter("cdesc", cdesc) :
                new ObjectParameter("cdesc", typeof(string));
    
            var catimgParameter = catimg != null ?
                new ObjectParameter("catimg", catimg) :
                new ObjectParameter("catimg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEditCategory", catidParameter, catnameParameter, cdescParameter, catimgParameter);
        }
    
        public virtual int AddEditfood(Nullable<int> foodid, string food, string fooddesc, Nullable<int> catid, Nullable<int> subcatid, string foodimg, Nullable<int> price)
        {
            var foodidParameter = foodid.HasValue ?
                new ObjectParameter("foodid", foodid) :
                new ObjectParameter("foodid", typeof(int));
    
            var foodParameter = food != null ?
                new ObjectParameter("food", food) :
                new ObjectParameter("food", typeof(string));
    
            var fooddescParameter = fooddesc != null ?
                new ObjectParameter("fooddesc", fooddesc) :
                new ObjectParameter("fooddesc", typeof(string));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            var subcatidParameter = subcatid.HasValue ?
                new ObjectParameter("subcatid", subcatid) :
                new ObjectParameter("subcatid", typeof(int));
    
            var foodimgParameter = foodimg != null ?
                new ObjectParameter("foodimg", foodimg) :
                new ObjectParameter("foodimg", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEditfood", foodidParameter, foodParameter, fooddescParameter, catidParameter, subcatidParameter, foodimgParameter, priceParameter);
        }
    
        public virtual int AddeditSubcat(Nullable<int> subcatid, string sname, string sdesc, string simage, Nullable<int> cid)
        {
            var subcatidParameter = subcatid.HasValue ?
                new ObjectParameter("subcatid", subcatid) :
                new ObjectParameter("subcatid", typeof(int));
    
            var snameParameter = sname != null ?
                new ObjectParameter("sname", sname) :
                new ObjectParameter("sname", typeof(string));
    
            var sdescParameter = sdesc != null ?
                new ObjectParameter("sdesc", sdesc) :
                new ObjectParameter("sdesc", typeof(string));
    
            var simageParameter = simage != null ?
                new ObjectParameter("simage", simage) :
                new ObjectParameter("simage", typeof(string));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddeditSubcat", subcatidParameter, snameParameter, sdescParameter, simageParameter, cidParameter);
        }
    }
}
